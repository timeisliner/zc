/* 
testzcChat.0.1.vj 2018-5-8 13:44:28


require
zcOutput.0.2.vj 2018-5-4 20:49:19
zcTrigger.0.1.vj 2018-5-7 19:03:14


test lib
zcChat.0.1.vj 2018-5-7 18:23:28


*/

scope testzcChat initializer init

globals
  private boolean tested = false
  
  private constant string ENTRY = "-"         // 匹配 进入点
  
  private zcOutputs out = 0
  private zcChats chat = 0
endglobals

private function chatAction takes nothing returns nothing
  local string t = GetEventPlayerChatString()
  local string mt = GetEventPlayerChatStringMatched()
  local integer length = StringLength(t)
  
  
  
  local string entry = SubString(t, 1, 2)
  local string space = SubString(t, 2, 3)
  
  call out.show("信息：" + t + " 长度：" + I2S(length))

  
  if length > 3 and space == " " then
    if entry == "c"  then
      call out.show("有效信息：" + SubString(t, 3, 10))
    elseif entry == "o" then
      if length == 5 and SubString(t, 3, 5) == "on" then
        call chat.on()
      elseif length == 6 and SubString(t, 3, 6) == "off" then
        call chat.off()
      else
        call out.show("错误信息：" + t + "指令系统关闭中...")
        call chat.destroy()
      endif
    endif
  endif
  
  
  //call out.show("GetEventPlayerChatString " + t)
  //call out.show("GetEventPlayerChatStringMatched " + mt)
  //call out.show("StringCase upper:true" + StringCase(t, true))
  //call out.show("StringCase upper:false " + StringCase(t, false))
  //call out.show("GetLocalizedString " + GetLocalizedString(t))
  //call out.show("StringLength " + I2S(StringLength(t)))
  //call out.show("SubString 3 - 10 " + SubString(t, 3, 10))
  //call out.show("SubString 0 - 2" + SubString(t, 0, 2))
  //call out.show("StringHash " + I2S(StringHash(t)))
endfunction

// 显示 玩家状态
// 输入 -ps pid
private function onChat takes nothing returns nothing
  local integer uid = 0
  local boolean ex = false
  local string uids = I2S(uid)
  local player p = Player(uid)
  local zcTriggers trg = zcTriggers.create()
  set chat = zcChats.create(trg, p)
  set chat.exact = ex
  
  call chat.run(ENTRY, function chatAction)
  
  if chat.exact then
    call out.show("精确匹配：ON")
  else
    call out.show("精确匹配：OFF")
  endif
  

  call out.show("输入： -c info")
  call out.show("开启触发： -o on")
  call out.show("关闭触发： -o off")
  
  set uid = 0
  set ex = false
  set uids = null
  set p = null
  set trg = 0
endfunction



private function init takes nothing returns nothing
  // Test
  if tested then
    return
  else
    set tested = true
  endif
  // lib zcOutput
  set out = zcOutputs.create("")
  set out.duration = 200
  
  // lib testzcChat
  call onChat()

endfunction


endscope
